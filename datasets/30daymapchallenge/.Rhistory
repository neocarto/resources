library(rtweet)
library(stringr)
# API_key <- "32SVp6wuOR2aDBBa06NjlaagA"
# API_secretkey <- "QjfH0dkiHdEV4zv7siLybhaclumxHFYK4uXAbGRfirIGSQK8Xd"
# access_token <- "1035417413586694144-VKWYOypOlz3TYxTzHku0PzaPrRByic"
# access_secret <- "LajxfmYn6v7ogMo8sOWCsIiwql5ABtDAGaUisK9SoHiwQ"
#
# # Token
# token <- create_token(
#   app = "neocartocnrs",
#   consumer_key = API_key,
#   consumer_secret = API_secretkey,
#   access_token = access_token,
#   access_secret = access_secret,
#   set_renv = TRUE
# )
get_token()
# mapchallenge
mapchallenge <- read.csv("30daymapchallenge.csv")
# x <- get_my_timeline(n = 3200)
# get timeline @neocartocnrs
timeline <- get_timeline(
user = "neocartocnrs",
n = 1000)
timeline$hashtag <- NA
for (i in 1:nrow(timeline)){ timeline$hashtag[i] <- unlist(timeline$hashtags[i])[1]}
df <- data.frame(timeline[timeline$hashtag == "30DayMapChallenge" & timeline$is_retweet == FALSE,])
df <- df[!is.na(df$status_id),c("status_id","created_at","text","favorite_count","retweet_count","media_url")]
# merge
for (i in 1:nrow(df)){
df$day[i] <- str_split(df$text[i], " ")[[1]][2]
x <- str_split(df$url[i]," ")
if (length(unlist(x)) == 2){df$url[i] <- unlist(x)[2]}
}
mapchallenge <- merge(x = mapchallenge, y = df, by.x = "day", day.y = day)
# count comments
first <- "1323203143140810752"
mentions <- get_mentions(since_id = first)
for (i in 1:nrow(mapchallenge)){
status <- mapchallenge$status_id[i]
tmp <- mentions[mentions$status_in_reply_to_status_id == status,]
tmp <- tmp[!is.na(tmp$status_id),]
mapchallenge$comment_count[i] <- nrow(tmp)
}
write.csv(mapchallenge, "mapchallenge.csv", row.names = FALSE)
write.csv(mapchallenge, "30dmc2020.csv", row.names = FALSE)
mapchallenge
class(mapchallenge)
write.csv2(mapchallenge, "30dmc2020.csv", row.names = FALSE)
library(rtweet)
library(stringr)
# mapchallenge
mapchallenge <- read.csv("30daymapchallenge.csv")
# x <- get_my_timeline(n = 3200)
# get timeline @neocartocnrs
timeline <- get_timeline(
user = "neocartocnrs",
n = 1000)
timeline$hashtag <- NA
for (i in 1:nrow(timeline)){ timeline$hashtag[i] <- unlist(timeline$hashtags[i])[1]}
df <- data.frame(timeline[timeline$hashtag == "30DayMapChallenge" & timeline$is_retweet == FALSE,])
df <- df[!is.na(df$status_id),c("status_id","created_at","text","favorite_count","retweet_count","media_url")]
# merge
for (i in 1:nrow(df)){
df$day[i] <- str_split(df$text[i], " ")[[1]][2]
x <- str_split(df$url[i]," ")
if (length(unlist(x)) == 2){df$url[i] <- unlist(x)[2]}
}
mapchallenge <- merge(x = mapchallenge, y = df, by.x = "day", day.y = day)
# count comments
first <- "1323203143140810752"
mentions <- get_mentions(since_id = first)
for (i in 1:nrow(mapchallenge)){
status <- mapchallenge$status_id[i]
tmp <- mentions[mentions$status_in_reply_to_status_id == status,]
tmp <- tmp[!is.na(tmp$status_id),]
mapchallenge$comment_count[i] <- nrow(tmp)
}
write.csv(mapchallenge, "30dmc2020.csv", row.names = FALSE)
View(mapchallenge)
write.csv(mapchallenge, "30dmc2020.csv", row.names = FALSE)
getwd()
file <- "test.csv"
write.csv(mapchallenge,file, row.names = FALSE)
View(mapchallenge)
colnames(mapchallenge)
class(mapchallenge$media_url)
View(mapchallenge)
mapchallenge$media_url <- as.character(mapchallenge$media_url)
View(mapchallenge)
write.csv(mapchallenge,"30dmc2020", row.names = FALSE)
library(rtweet)
library(stringr)
# mapchallenge
mapchallenge <- read.csv("30daymapchallenge.csv")
# x <- get_my_timeline(n = 3200)
# get timeline @neocartocnrs
timeline <- get_timeline(
user = "neocartocnrs",
n = 1000)
timeline$hashtag <- NA
for (i in 1:nrow(timeline)){ timeline$hashtag[i] <- unlist(timeline$hashtags[i])[1]}
df <- data.frame(timeline[timeline$hashtag == "30DayMapChallenge" & timeline$is_retweet == FALSE,])
df <- df[!is.na(df$status_id),c("status_id","created_at","text","favorite_count","retweet_count","media_url")]
# merge
for (i in 1:nrow(df)){
df$day[i] <- str_split(df$text[i], " ")[[1]][2]
x <- str_split(df$url[i]," ")
if (length(unlist(x)) == 2){df$url[i] <- unlist(x)[2]}
}
mapchallenge <- merge(x = mapchallenge, y = df, by.x = "day", day.y = day)
# count comments
first <- "1323203143140810752"
mentions <- get_mentions(since_id = first)
for (i in 1:nrow(mapchallenge)){
status <- mapchallenge$status_id[i]
tmp <- mentions[mentions$status_in_reply_to_status_id == status,]
tmp <- tmp[!is.na(tmp$status_id),]
mapchallenge$comment_count[i] <- nrow(tmp)
}
mapchallenge
mapchallenge$media_url <- as.character(mapchallenge$media_url)
write.csv(mapchallenge,"30dmc2020", row.names = FALSE)
View(mapchallenge)
library(rtweet)
library(stringr)
# mapchallenge
mapchallenge <- read.csv("30daymapchallenge.csv")
# x <- get_my_timeline(n = 3200)
# get timeline @neocartocnrs
timeline <- get_timeline(
user = "neocartocnrs",
n = 1000)
timeline$hashtag <- NA
for (i in 1:nrow(timeline)){ timeline$hashtag[i] <- unlist(timeline$hashtags[i])[1]}
df <- data.frame(timeline[timeline$hashtag == "30DayMapChallenge" & timeline$is_retweet == FALSE,])
df <- df[!is.na(df$status_id),c("status_id","created_at","text","favorite_count","retweet_count","media_url")]
# merge
for (i in 1:nrow(df)){
df$day[i] <- str_split(df$text[i], " ")[[1]][2]
x <- str_split(df$url[i]," ")
if (length(unlist(x)) == 2){df$url[i] <- unlist(x)[2]}
}
mapchallenge <- merge(x = mapchallenge, y = df, by.x = "day", day.y = day)
# count comments
first <- "1323203143140810752"
mentions <- get_mentions(since_id = first)
for (i in 1:nrow(mapchallenge)){
status <- mapchallenge$status_id[i]
tmp <- mentions[mentions$status_in_reply_to_status_id == status,]
tmp <- tmp[!is.na(tmp$status_id),]
mapchallenge$comment_count[i] <- nrow(tmp)
}
head(mapchallenge)
mapchallenge$media_url <- as.character(mapchallenge$media_url)
write.csv(mapchallenge,"30dmc2020.csv", row.names = FALSE)
View(mapchallenge)
library(rtweet)
library(stringr)
# mapchallenge
mapchallenge <- read.csv("30daymapchallenge.csv")
# x <- get_my_timeline(n = 3200)
# get timeline @neocartocnrs
timeline <- get_timeline(
user = "neocartocnrs",
n = 1000)
timeline$hashtag <- NA
for (i in 1:nrow(timeline)){ timeline$hashtag[i] <- unlist(timeline$hashtags[i])[1]}
df <- data.frame(timeline[timeline$hashtag == "30DayMapChallenge" & timeline$is_retweet == FALSE,])
df <- df[!is.na(df$status_id),c("status_id","created_at","text","favorite_count","retweet_count","media_url")]
# merge
for (i in 1:nrow(df)){
df$day[i] <- str_split(df$text[i], " ")[[1]][2]
x <- str_split(df$url[i]," ")
if (length(unlist(x)) == 2){df$url[i] <- unlist(x)[2]}
}
mapchallenge <- merge(x = mapchallenge, y = df, by.x = "day", day.y = day)
# count comments
first <- "1323203143140810752"
mentions <- get_mentions(since_id = first)
for (i in 1:nrow(mapchallenge)){
status <- mapchallenge$status_id[i]
tmp <- mentions[mentions$status_in_reply_to_status_id == status,]
tmp <- tmp[!is.na(tmp$status_id),]
mapchallenge$comment_count[i] <- nrow(tmp)
}
head(mapchallenge)
mapchallenge$media_url <- as.character(mapchallenge$media_url)
write.csv(mapchallenge,"output/30dmc2020.csv", row.names = FALSE)
View(mapchallenge)
library(rtweet)
library(stringr)
# mapchallenge
mapchallenge <- read.csv("30daymapchallenge.csv")
# x <- get_my_timeline(n = 3200)
# get timeline @neocartocnrs
timeline <- get_timeline(
user = "neocartocnrs",
n = 1000)
timeline$hashtag <- NA
for (i in 1:nrow(timeline)){ timeline$hashtag[i] <- unlist(timeline$hashtags[i])[1]}
df <- data.frame(timeline[timeline$hashtag == "30DayMapChallenge" & timeline$is_retweet == FALSE,])
df <- df[!is.na(df$status_id),c("status_id","created_at","text","favorite_count","retweet_count","media_url")]
# merge
for (i in 1:nrow(df)){
df$day[i] <- str_split(df$text[i], " ")[[1]][2]
x <- str_split(df$url[i]," ")
if (length(unlist(x)) == 2){df$url[i] <- unlist(x)[2]}
}
mapchallenge <- merge(x = mapchallenge, y = df, by.x = "day", day.y = day)
# count comments
first <- "1323203143140810752"
mentions <- get_mentions(since_id = first)
for (i in 1:nrow(mapchallenge)){
status <- mapchallenge$status_id[i]
tmp <- mentions[mentions$status_in_reply_to_status_id == status,]
tmp <- tmp[!is.na(tmp$status_id),]
mapchallenge$comment_count[i] <- nrow(tmp)
}
head(mapchallenge)
mapchallenge$media_url <- as.character(mapchallenge$media_url)
write.csv(mapchallenge,"output/30dmc2020.csv", row.names = FALSE)
View(mapchallenge)
Sys.Date()
x <- Sys.Date()
write.table(x <- Sys.Date(), "updtae.txt", append = FALSE, sep = " ", dec = ".",
row.names = TRUE, col.names = TRUE)
write.table(Sys.Date(), "data/update.txt", row.names = FALSE, col.names = FALSE)
x <-
write.table(x <- Sys.Date(), "data/update.txt", row.names = FALSE, col.names = FALSE)
write.table(Sys.Date(), "output/update.txt", row.names = FALSE, col.names = FALSE)
library(rtweet)
library(stringr)
# mapchallenge
mapchallenge <- read.csv("30daymapchallenge.csv")
# x <- get_my_timeline(n = 3200)
# get timeline @neocartocnrs
timeline <- get_timeline(
user = "neocartocnrs",
n = 1000)
timeline$hashtag <- NA
for (i in 1:nrow(timeline)){ timeline$hashtag[i] <- unlist(timeline$hashtags[i])[1]}
df <- data.frame(timeline[timeline$hashtag == "30DayMapChallenge" & timeline$is_retweet == FALSE,])
df <- df[!is.na(df$status_id),c("status_id","created_at","text","favorite_count","retweet_count","media_url")]
# merge
for (i in 1:nrow(df)){
df$day[i] <- str_split(df$text[i], " ")[[1]][2]
x <- str_split(df$url[i]," ")
if (length(unlist(x)) == 2){df$url[i] <- unlist(x)[2]}
}
mapchallenge <- merge(x = mapchallenge, y = df, by.x = "day", day.y = day)
# count comments
first <- "1323203143140810752"
mentions <- get_mentions(since_id = first)
for (i in 1:nrow(mapchallenge)){
status <- mapchallenge$status_id[i]
tmp <- mentions[mentions$status_in_reply_to_status_id == status,]
tmp <- tmp[!is.na(tmp$status_id),]
mapchallenge$comment_count[i] <- nrow(tmp)
}
head(mapchallenge)
mapchallenge$media_url <- as.character(mapchallenge$media_url)
write.csv(mapchallenge,"output/30dmc2020.csv", row.names = FALSE)
write.table(Sys.Date(), "output/update.txt", row.names = FALSE, col.names = FALSE)
library(rtweet)
library(stringr)
# mapchallenge
mapchallenge <- read.csv("30daymapchallenge.csv")
# x <- get_my_timeline(n = 3200)
# get timeline @neocartocnrs
timeline <- get_timeline(
user = "neocartocnrs",
n = 1000)
timeline$hashtag <- NA
for (i in 1:nrow(timeline)){ timeline$hashtag[i] <- unlist(timeline$hashtags[i])[1]}
df <- data.frame(timeline[timeline$hashtag == "30DayMapChallenge" & timeline$is_retweet == FALSE,])
df <- df[!is.na(df$status_id),c("status_id","created_at","text","favorite_count","retweet_count","media_url")]
View(df)
library(rtweet)
library(stringr)
# mapchallenge
mapchallenge <- read.csv("30daymapchallenge.csv")
# get timeline @neocartocnrs
timeline <- get_timeline(
user = "neocartocnrs",
n = 1000)
timeline$hashtag <- NA
for (i in 1:nrow(timeline)){ timeline$hashtag[i] <- unlist(timeline$hashtags[i])[1]}
df <- data.frame(timeline[timeline$hashtag == "30DayMapChallenge" & timeline$is_retweet == FALSE,])
df <- df[!is.na(df$status_id),c("status_id","created_at","text","favorite_count","retweet_count","media_url")]
# merge
for (i in 1:nrow(df)){
df$day[i] <- str_split(df$text[i], " ")[[1]][2]
x <- str_split(df$url[i]," ")
if (length(unlist(x)) == 2){df$url[i] <- unlist(x)[2]}
}
mapchallenge <- merge(x = mapchallenge, y = df, by.x = "day", day.y = day)
# count comments
first <- "1323203143140810752"
mentions <- get_mentions(since_id = first)
for (i in 1:nrow(mapchallenge)){
status <- mapchallenge$status_id[i]
tmp <- mentions[mentions$status_in_reply_to_status_id == status,]
tmp <- tmp[!is.na(tmp$status_id),]
mapchallenge$comment_count[i] <- nrow(tmp)
}
mapchallenge$media_url <- as.character(mapchallenge$media_url)
write.csv(mapchallenge,"output/30dmc2020.csv", row.names = FALSE)
write.table(Sys.Date(), "output/update.txt", row.names = FALSE, col.names = FALSE)

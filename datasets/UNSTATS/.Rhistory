url = "https://gitlab.huma-num.fr/nlambert/resources/-/raw/master/basemaps/world_countries.geojson"
nomenclature <- sf <- geojson_sf(url)
nomenclature <- nomenclature[,c("ISO3","NAMEfr","NAMEen")]
# GDP from World Bank
wb <- data.frame(read_xls("WorldBank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_2055584.xls", skip = 3))
colnames(wb)
wb$gdp <- wb$X2020
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2019"]
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2018"]
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2017"]
wb <- wb[,c( "Country.Code", "Country.Name", "gdp")]
colnames(wb) <- c("ISO3","name","gdp")
wb$gdp <- wb$gdp / 1000000000
View(wb)
wb$gdp <- as.numeric(wb$gdp / 1000000000)
library(readxl)
library(countrycode)
library(geojsonsf)
# Nomenclature
url = "https://gitlab.huma-num.fr/nlambert/resources/-/raw/master/basemaps/world_countries.geojson"
nomenclature <- sf <- geojson_sf(url)
nomenclature <- nomenclature[,c("ISO3","NAMEfr","NAMEen")]
# GDP from World Bank
wb <- data.frame(read_xls("WorldBank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_2055584.xls", skip = 3))
colnames(wb)
wb$gdp <- wb$X2020
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2019"]
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2018"]
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2017"]
wb <- wb[,c( "Country.Code", "Country.Name", "gdp")]
colnames(wb) <- c("ISO3","name","gdp")
wb$gdp <- as.numeric(wb$gdp / 1000000000)
View(wb)
library(readxl)
library(countrycode)
library(geojsonsf)
# Nomenclature
url = "https://gitlab.huma-num.fr/nlambert/resources/-/raw/master/basemaps/world_countries.geojson"
nomenclature <- sf <- geojson_sf(url)
nomenclature <- nomenclature[,c("ISO3","NAMEfr","NAMEen")]
# GDP from World Bank
wb <- data.frame(read_xls("WorldBank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_2055584.xls", skip = 3))
wb$gdp <- wb$X2020
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2019"]
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2018"]
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2017"]
wb <- wb[,c( "Country.Code", "Country.Name", "gdp")]
colnames(wb) <- c("ISO3","name","gdp")
wb$gdp <- as.numeric(wb$gdp / 1000000000)
# GDP from IMF (https://www.imf.org/external/datamapper/NGDPD@WEO/OEMDC/ADVEC/WEOWORLD)
imf <- data.frame(read_xls("IMF/imf-dm-export-20210323 (1).xls"))
imf$iso3c = countrycode(imf[,1], 'country.name', 'iso3c')
imf <- imf[,c("iso3c","GDP..current.prices..Billions.of.U.S..dollars.","X2021")]
colnames(imf) <- c("iso3c","name","gdp2021")
# Check nomenclature
gdp <- merge(x = nomenclature, y = imf, by.x = "ISO3", by.y ="iso3c", all.x = TRUE)
View(gdp)
gdp[gdp$ISO3 == "CUB",]
gdp[gdp$ISO3 == "CUB","gdp2021"]
wb$gdp[wb$ISO3=="CUB"]
library(readxl)
library(countrycode)
library(geojsonsf)
# Nomenclature
url = "https://gitlab.huma-num.fr/nlambert/resources/-/raw/master/basemaps/world_countries.geojson"
nomenclature <- sf <- geojson_sf(url)
nomenclature <- nomenclature[,c("ISO3","NAMEfr","NAMEen")]
# GDP from World Bank
wb <- data.frame(read_xls("WorldBank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_2055584.xls", skip = 3))
wb$gdp <- wb$X2020
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2019"]
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2018"]
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2017"]
wb <- wb[,c( "Country.Code", "Country.Name", "gdp")]
colnames(wb) <- c("ISO3","name","gdp")
wb$gdp <- as.numeric(wb$gdp / 1000000000)
# GDP from IMF (https://www.imf.org/external/datamapper/NGDPD@WEO/OEMDC/ADVEC/WEOWORLD)
imf <- data.frame(read_xls("IMF/imf-dm-export-20210323 (1).xls"))
imf$iso3c = countrycode(imf[,1], 'country.name', 'iso3c')
imf <- imf[,c("iso3c","GDP..current.prices..Billions.of.U.S..dollars.","X2021")]
colnames(imf) <- c("iso3c","name","gdp")
# Check nomenclature
gdp <- merge(x = nomenclature, y = imf, by.x = "ISO3", by.y ="iso3c", all.x = TRUE)
gdp$source[!is.na(gdp$gdp)] <- "IMF (gdp2021)"
View(gdp)
library(readxl)
library(countrycode)
library(geojsonsf)
# Nomenclature
url = "https://gitlab.huma-num.fr/nlambert/resources/-/raw/master/basemaps/world_countries.geojson"
nomenclature <- sf <- geojson_sf(url)
nomenclature <- nomenclature[,c("ISO3","NAMEfr","NAMEen")]
# GDP from World Bank
wb <- data.frame(read_xls("WorldBank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_2055584.xls", skip = 3))
wb$gdp <- wb$X2020
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2019"]
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2018"]
wb$gdp[is.na(wb$gdp)] <- wb[is.na(wb$gdp),"X2017"]
wb <- wb[,c( "Country.Code", "Country.Name", "gdp")]
colnames(wb) <- c("ISO3","name","gdp")
wb$gdp <- as.numeric(wb$gdp / 1000000000)
# GDP from IMF (https://www.imf.org/external/datamapper/NGDPD@WEO/OEMDC/ADVEC/WEOWORLD)
imf <- data.frame(read_xls("IMF/imf-dm-export-20210323 (1).xls"))
imf$iso3c = countrycode(imf[,1], 'country.name', 'iso3c')
imf <- imf[,c("iso3c","GDP..current.prices..Billions.of.U.S..dollars.","X2021")]
colnames(imf) <- c("iso3c","name","gdp")
# Check nomenclature
gdp <- merge(x = nomenclature, y = imf, by.x = "ISO3", by.y ="iso3c", all.x = TRUE)
gdp$source[!is.na(gdp$gdp)] <- "IMF (2021)"
View(gdp)
gdp[gdp$ISO3 == "CUB","gdp"] <- wb$gdp[wb$ISO3=="CUB"]
wb <- data.frame(read_xls("WorldBank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_2055584.xls", skip = 3))
View(wb)
gdp[gdp$ISO3 == "CUB","source"] <- "World Bank (2018)"
View(gdp)
wb <- data.frame(read_xls("WorldBank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_2055584.xls", skip = 3))
View(wb)
# On bouche les trous avec World bank
as.numeric(wb$x2018 / 1000000000)[][wb$ISO3=="CUB"]
# On bouche les trous avec World bank
as.numeric(wb$X2018 / 1000000000)[][wb$ISO3=="CUB"]
# On bouche les trous avec World bank
as.numeric(wb$X2018 / 1000000000)[wb$ISO3=="CUB"]
# On bouche les trous avec World bank
as.numeric(wb$X2018 / 1000000000)
[wb$ISO3=="CUB", "X2018"]
wb$ISO3=="CUB", "X2018"]
wb$ISO3["CUB", "X2018"]
wb[wb$ISO3=="CUB", "X2018"]
wb[wb$ISO3=="CUB", "X2017"]
wb[wb$ISO3=="CUB",]
wb[wb$Country.Code =="CUB", "X2017"]
wb[wb$Country.Code =="CUB", "X2017"] / 1000000000
wb[wb$Country.Code =="CUB", "X2018"] / 1000000000
wb[wb$Country.Code =="CUB", "X2019"] / 1000000000
gdp[gdp$ISO3 == "CUB","gdp"] <- wb[wb$Country.Code =="CUB", "X2018"] / 1000000000
gdp[gdp$ISO3 == "CUB","source"] <- "World Bank (2018)"
View(gdp)
View(wb)
wb[wb$Country.Code =="AND", "X2018"] / 1000000000
wb[wb$Country.Code =="AND", "X2019"] / 1000000000
wb[wb$Country.Code =="AND", "X2020"] / 1000000000
gdp[gdp$ISO3 == "AND","gdp"] <- wb[wb$Country.Code =="AND", "X2019"] / 1000000000
gdp[gdp$ISO3 == "AND","source"] <- "World Bank (2019)"
View(gdp)
wb[wb$Country.Code =="GRL", "X2019"] / 1000000000
wb[wb$Country.Code =="GRL", "X2018"] / 1000000000
library(readxl)
library(countrycode)
library(geojsonsf)
# Nomenclature
url = "https://gitlab.huma-num.fr/nlambert/resources/-/raw/master/basemaps/world_countries.geojson"
nomenclature <- sf <- geojson_sf(url)
nomenclature <- nomenclature[,c("ISO3","NAMEfr","NAMEen")]
# GDP from IMF (https://www.imf.org/external/datamapper/NGDPD@WEO/OEMDC/ADVEC/WEOWORLD)
imf <- data.frame(read_xls("IMF/imf-dm-export-20210323 (1).xls"))
imf$iso3c = countrycode(imf[,1], 'country.name', 'iso3c')
imf <- imf[,c("iso3c","GDP..current.prices..Billions.of.U.S..dollars.","X2021")]
colnames(imf) <- c("iso3c","name","gdp")
# Check nomenclature
gdp <- merge(x = nomenclature, y = imf, by.x = "ISO3", by.y ="iso3c", all.x = TRUE)
gdp$source[!is.na(gdp$gdp)] <- "IMF (2021)"
# On bouche les trous avec World bank
wb <- data.frame(read_xls("WorldBank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_2055584.xls", skip = 3))
# Cuba
gdp[gdp$ISO3 == "CUB","gdp"] <- wb[wb$Country.Code =="CUB", "X2018"] / 1000000000
gdp[gdp$ISO3 == "CUB","source"] <- "World Bank (2018)"
# Andora
gdp[gdp$ISO3 == "AND","gdp"] <- wb[wb$Country.Code =="AND", "X2019"] / 1000000000
gdp[gdp$ISO3 == "AND","source"] <- "World Bank (2019)"
# Greenland
gdp[gdp$ISO3 == "GRL","gdp"] <- wb[wb$Country.Code =="GRL", "X2018"] / 1000000000
gdp[gdp$ISO3 == "GRL","source"] <- "World Bank (2018)"
View(gdp)
wb[wb$Country.Code =="LBN", "X2018"] / 1000000000
wb[wb$Country.Code =="LBN", "X2019"] / 1000000000
View(gdp)
wb[wb$Country.Code =="PAK", "X2019"] / 1000000000
wb[wb$Country.Code =="SYR", "X2019"] / 1000000000
wb[wb$Country.Code =="SYR", "X2018"] / 1000000000
wb[wb$Country.Code =="SYR", "X2017"] / 1000000000
wb[wb$Country.Code =="SYR", "X2016"] / 1000000000
wb[wb$Country.Code =="SYR", "X2015"] / 1000000000
library(readxl)
library(countrycode)
library(geojsonsf)
# Nomenclature
url = "https://gitlab.huma-num.fr/nlambert/resources/-/raw/master/basemaps/world_countries.geojson"
nomenclature <- sf <- geojson_sf(url)
nomenclature <- nomenclature[,c("ISO3","NAMEfr","NAMEen")]
# GDP from IMF (https://www.imf.org/external/datamapper/NGDPD@WEO/OEMDC/ADVEC/WEOWORLD)
imf <- data.frame(read_xls("IMF/imf-dm-export-20210323 (1).xls"))
imf$iso3c = countrycode(imf[,1], 'country.name', 'iso3c')
imf <- imf[,c("iso3c","GDP..current.prices..Billions.of.U.S..dollars.","X2021")]
colnames(imf) <- c("iso3c","name","gdp")
# Check nomenclature
gdp <- merge(x = nomenclature, y = imf, by.x = "ISO3", by.y ="iso3c", all.x = TRUE)
gdp$source[!is.na(gdp$gdp)] <- "IMF (2021)"
# On bouche les trous avec World bank
wb <- data.frame(read_xls("WorldBank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_2055584.xls", skip = 3))
# Cuba
gdp[gdp$ISO3 == "CUB","gdp"] <- wb[wb$Country.Code =="CUB", "X2018"] / 1000000000
gdp[gdp$ISO3 == "CUB","source"] <- "World Bank (2018)"
# Andora
gdp[gdp$ISO3 == "AND","gdp"] <- wb[wb$Country.Code =="AND", "X2019"] / 1000000000
gdp[gdp$ISO3 == "AND","source"] <- "World Bank (2019)"
# Greenland
gdp[gdp$ISO3 == "GRL","gdp"] <- wb[wb$Country.Code =="GRL", "X2018"] / 1000000000
gdp[gdp$ISO3 == "GRL","source"] <- "World Bank (2018)"
# Lebanon
gdp[gdp$ISO3 == "LBN","gdp"] <- wb[wb$Country.Code =="LBN", "X2019"] / 1000000000
gdp[gdp$ISO3 == "LBN","source"] <- "World Bank (2019)"
# Pakistan
gdp[gdp$ISO3 == "PAK","gdp"] <- wb[wb$Country.Code =="PAK", "X2019"] / 1000000000
gdp[gdp$ISO3 == "PAK","source"] <- "World Bank (2019)"
View(gdp)
View(Syria)
View(imf)
View(wb)
wb[wb$Country.Code =="SYR", "X2015"] / 1000000000
wb[wb$Country.Code =="SYR", "X2010"] / 1000000000
wb[wb$Country.Code =="SYR", "X2005"] / 1000000000
wb[wb$Country.Code =="SYR", "X2010"] / 1000000000
wb[wb$Country.Code =="SYR", "X2009"] / 1000000000
wb[wb$Country.Code =="SYR", "X2008"] / 1000000000
wb[wb$Country.Code =="SYR", "X2007"] / 1000000000
# Syria
gdp[gdp$ISO3 == "SYR","gdp"] <- wb[wb$Country.Code =="SYR", "X2007"] / 1000000000
gdp[gdp$ISO3 == "SYR","source"] <- "World Bank (2007)"
View(gdp)
wb[wb$Country.Code =="FLK",]
wb[wb$Country.Code =="FRO",]
wb[wb$Country.Code =="GGY",]
wb[wb$Country.Code =="IMN",]
wb[wb$Country.Code =="JEY",]
wb[wb$Country.Code =="KOS",]
wb[wb$Country.Code =="LIE",]
wb[wb$Country.Code =="MCO",]
wb[wb$Country.Code =="NCL",]
wb[wb$Country.Code =="PRK",]
wb[wb$Country.Code =="SAH",]
wb[wb$Country.Code =="VAT",]
library(readxl)
library(countrycode)
library(geojsonsf)
# Nomenclature
url = "https://gitlab.huma-num.fr/nlambert/resources/-/raw/master/basemaps/world_countries.geojson"
nomenclature <- sf <- geojson_sf(url)
nomenclature <- nomenclature[,c("ISO3","NAMEfr","NAMEen")]
# GDP from IMF (https://www.imf.org/external/datamapper/NGDPD@WEO/OEMDC/ADVEC/WEOWORLD)
imf <- data.frame(read_xls("IMF/imf-dm-export-20210323 (1).xls"))
imf$iso3c = countrycode(imf[,1], 'country.name', 'iso3c')
imf <- imf[,c("iso3c","GDP..current.prices..Billions.of.U.S..dollars.","X2021")]
colnames(imf) <- c("iso3c","name","gdp")
# Check nomenclature
gdp <- merge(x = nomenclature, y = imf, by.x = "ISO3", by.y ="iso3c", all.x = TRUE)
gdp$source[!is.na(gdp$gdp)] <- "IMF (2021)"
# On bouche les trous avec World bank
wb <- data.frame(read_xls("WorldBank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_2055584.xls", skip = 3))
# Cuba
gdp[gdp$ISO3 == "CUB","gdp"] <- wb[wb$Country.Code =="CUB", "X2018"] / 1000000000
gdp[gdp$ISO3 == "CUB","source"] <- "World Bank (2018)"
# Andora
gdp[gdp$ISO3 == "AND","gdp"] <- wb[wb$Country.Code =="AND", "X2019"] / 1000000000
gdp[gdp$ISO3 == "AND","source"] <- "World Bank (2019)"
# Greenland
gdp[gdp$ISO3 == "GRL","gdp"] <- wb[wb$Country.Code =="GRL", "X2018"] / 1000000000
gdp[gdp$ISO3 == "GRL","source"] <- "World Bank (2018)"
# Lebanon
gdp[gdp$ISO3 == "LBN","gdp"] <- wb[wb$Country.Code =="LBN", "X2019"] / 1000000000
gdp[gdp$ISO3 == "LBN","source"] <- "World Bank (2019)"
# Pakistan
gdp[gdp$ISO3 == "PAK","gdp"] <- wb[wb$Country.Code =="PAK", "X2019"] / 1000000000
gdp[gdp$ISO3 == "PAK","source"] <- "World Bank (2019)"
# Syria
gdp[gdp$ISO3 == "SYR","gdp"] <- wb[wb$Country.Code =="SYR", "X2007"] / 1000000000
gdp[gdp$ISO3 == "SYR","source"] <- "World Bank (2007)"
# Faroe Island
gdp[gdp$ISO3 == "FRO","gdp"] <- wb[wb$Country.Code =="FRO", "X2018"] / 1000000000
gdp[gdp$ISO3 == "FRO","source"] <- "World Bank (2018)"
# Isle of Man
gdp[gdp$ISO3 == "IMN","gdp"] <- wb[wb$Country.Code =="IMN", "X2018"] / 1000000000
gdp[gdp$ISO3 == "IMN","source"] <- "World Bank (2018)"
# Liechtenstein
gdp[gdp$ISO3 == "LIE","gdp"] <- wb[wb$Country.Code =="LIE", "X2018"] / 1000000000
gdp[gdp$ISO3 == "LIE","source"] <- "World Bank (2018)"
# Monaco
gdp[gdp$ISO3 == "MCO","gdp"] <- wb[wb$Country.Code =="MCO", "X2018"] / 1000000000
gdp[gdp$ISO3 == "MCO","source"] <- "World Bank (2018)"
# New Caledonia
gdp[gdp$ISO3 == "NCL","gdp"] <- wb[wb$Country.Code =="NCL", "X2000"] / 1000000000
gdp[gdp$ISO3 == "NCL","source"] <- "World Bank (2000)"
write.csv(gdp, "gdp.csv")
library(readxl)
library(countrycode)
library(geojsonsf)
# Nomenclature
url = "https://gitlab.huma-num.fr/nlambert/resources/-/raw/master/basemaps/world_countries.geojson"
nomenclature <- sf <- geojson_sf(url)
nomenclature <- nomenclature[,c("ISO3","NAMEfr","NAMEen")]
un <- data.frame(read_xls("UNSTATS/Download-GDPcurrent-USD-countries.xlsx"))
getwd()
un <- data.frame(read_xls("UNSTATS/Download-GDPcurrent-USD-countries.xlsx"))
un <- data.frame(read_xlsx("UNSTATS/Download-GDPcurrent-USD-countries.xlsx"))
View(un)
un <- data.frame(read_xlsx("UNSTATS/Download-GDPcurrent-USD-countries.xlsx", skip = 2))
View(un)
View(un)
un <- un[un$IndicatorName == "Total Value Added",]
View(un)
View(un)
url = "https://gitlab.huma-num.fr/nlambert/resources/-/raw/master/basemaps/world_countries.geojson"
nomenclature <- sf <- geojson_sf(url)
View(nomenclature)
View(nomenclature)
nomenclature <- nomenclature[,c("ISO3","ISONUM","NAMEfr","NAMEen")]
un <- data.frame(read_xlsx("UNSTATS/Download-GDPcurrent-USD-countries.xlsx", skip = 2))
View(nomenclature)
un <- data.frame(read_xlsx("UNSTATS/Download-GDPcurrent-USD-countries.xlsx", skip = 2))
un <- un[un$IndicatorName == "Total Value Added",]
View(un)
colnames(un)
tmp <- un[,c("CountryID", "Country", "X2015", "X2016", "X2017", "X2018", "X2019")]
View(tmp)
tmp <- un[,c("CountryID", "Country", "X2019")]
un <- un[,c("CountryID", "Country", "X2019")]
View(un)
gdp <- merge(x = nomenclature, y = un, by.x = "ISONUM", by.y ="CountryID", all.x = TRUE)
View(gdp)
un <- data.frame(read_xlsx("UNSTATS/Download-GDPcurrent-USD-countries.xlsx", skip = 2))
un <- un[un$IndicatorName == "Total Value Added",]
View(nomenclature)
nomenclature$ISONUM[nomenclature$ISONUM == 234]
nomenclature$ISONUM[nomenclature$ISONUM == 234] <- 235
View(nomenclature)
library(readxl)
library(countrycode)
library(geojsonsf)
# Nomenclature
url = "https://gitlab.huma-num.fr/nlambert/resources/-/raw/master/basemaps/world_countries.geojson"
nomenclature <- sf <- geojson_sf(url)
nomenclature <- nomenclature[,c("ISO3","ISONUM","NAMEfr","NAMEen")]
nomenclature$ISONUM[nomenclature$ISONUM == 834] <- 835
View(nomenclature)
library(readxl)
library(countrycode)
library(geojsonsf)
# Nomenclature
url = "https://gitlab.huma-num.fr/nlambert/resources/-/raw/master/basemaps/world_countries.geojson"
nomenclature <- sf <- geojson_sf(url)
nomenclature <- nomenclature[,c("ISO3","ISONUM","NAMEfr","NAMEen")]
nomenclature$ISONUM[nomenclature$ISONUM == 834] <- 835
View(nomenclature)
# GDP from UNSTATS
un <- data.frame(read_xlsx("UNSTATS/Download-GDPcurrent-USD-countries.xlsx", skip = 2))
un <- un[un$IndicatorName == "Total Value Added",]
un <- un[,c("CountryID", "Country", "X2019")]
# Merge
gdp <- merge(x = nomenclature, y = un, by.x = "ISONUM", by.y ="CountryID", all.x = TRUE)
View(gdp)
nomenclature$ISONUM[nomenclature$ISO3 == "KOS"]
nomenclature$ISONUM[nomenclature$ISO3 == "KOS"] <- 412
View(nomenclature)
library(readxl)
library(countrycode)
library(geojsonsf)
# Nomenclature
nomenclature <- sf <- geojson_sf("UNSTATS/world.geojson")
nomenclature
un <- data.frame(read_xlsx("UNSTATS/Download-GDPcurrent-USD-countries.xlsx", skip = 2))
un <- un[un$IndicatorName == "Total Value Added",]
un <- un[,c("CountryID", "Country", "X2019")]
gdp <- merge(x = nomenclature, y = un, by.x = "ISONUM", by.y ="CountryID", all.x = TRUE)
View(gdp)
colnames(gdp)
gdp <- gdp[!is.na(gdp$X2019)]
gdp <- gdp[!is.na(gdp$X2019),]
colnames(gdp)
View(gdp)
library(sf)
gdp <- gdp[!is.na(gdp$X2019),] %>% st_drop_geometry()
library(readxl)
library(countrycode)
library(geojsonsf)
library(sf)
# Nomenclature
nomenclature <- sf <- geojson_sf("UNSTATS/world.geojson")
# GDP from UNSTATS
un <- data.frame(read_xlsx("UNSTATS/Download-GDPcurrent-USD-countries.xlsx", skip = 2))
un <- un[un$IndicatorName == "Total Value Added",]
un <- un[,c("CountryID", "Country", "X2019")]
# Merge
gdp <- merge(x = nomenclature, y = un, by.x = "ISONUM", by.y ="CountryID", all.x = TRUE)
gdp <- gdp[!is.na(gdp$X2019),] %>% st_drop_geometry()
View(gdp)
colnames(gdp)
gdp <- gdp[,"ISO3", "NAMEfr", "NAMEen", "X2019"]
library(readxl)
library(countrycode)
library(geojsonsf)
library(sf)
# Nomenclature
nomenclature <- sf <- geojson_sf("UNSTATS/world.geojson")
# GDP from UNSTATS
un <- data.frame(read_xlsx("UNSTATS/Download-GDPcurrent-USD-countries.xlsx", skip = 2))
un <- un[un$IndicatorName == "Total Value Added",]
un <- un[,c("CountryID", "Country", "X2019")]
# Merge
gdp <- merge(x = nomenclature, y = un, by.x = "ISONUM", by.y ="CountryID", all.x = TRUE)
gdp <- gdp[!is.na(gdp$X2019),] %>% st_drop_geometry()
gdp <- gdp[,"ISO3", "NAMEfr", "NAMEen", "X2019"]
colnames(gdp)
gdp <- merge(x = nomenclature, y = un, by.x = "ISONUM", by.y ="CountryID", all.x = TRUE)
gdp <- gdp[!is.na(gdp$X2019),] %>% st_drop_geometry()
colnames(gdp)
gdp <- gdp[,"ISO3", "NAMEfr", "NAMEen", "X2019"]
gdp <- gdp[,c("ISO3", "NAMEfr", "NAMEen", "X2019")]
colnames(gdp) <- c("ISO3", "NAMEfr", "NAMEen", "GDP2019")
write.csv(gdp, "gdp2019.csv")
write.csv(gdp, "UNSTATS/gdp2019.csv")
library(readxl)
library(countrycode)
library(geojsonsf)
library(sf)
# Nomenclature
nomenclature <- sf <- geojson_sf("world.geojson")
# GDP from UNSTATS
un <- data.frame(read_xlsx("Download-GDPcurrent-USD-countries.xlsx", skip = 2))
un <- un[un$IndicatorName == "Total Value Added",]
un <- un[,c("CountryID", "Country", "X2019")]
# Merge
gdp <- merge(x = nomenclature, y = un, by.x = "ISONUM", by.y ="CountryID", all.x = TRUE)
gdp <- gdp[!is.na(gdp$X2019),] %>% st_drop_geometry()
gdp <- gdp[,c("ISO3", "NAMEfr", "NAMEen", "X2019")]
colnames(gdp) <- c("ISO3", "NAMEfr", "NAMEen", "GDP2019")
write.csv(gdp, "gdp2019.csv")
library(readxl)
library(countrycode)
library(geojsonsf)
library(sf)
# Nomenclature
nomenclature <- sf <- geojson_sf("UNSTATS/world.geojson")
# GDP from UNSTATS
un <- data.frame(read_xlsx("UNSTATS/Download-GDPcurrent-USD-countries.xlsx", skip = 2))
un <- un[un$IndicatorName == "Total Value Added",]
un <- un[,c("CountryID", "Country", "X2019")]
library(readxl)
library(countrycode)
library(geojsonsf)
library(sf)
# Nomenclature
nomenclature <- sf <- geojson_sf("UNSTATS/world.geojson")
# GDP from UNSTATS
un <- data.frame(read_xlsx("UNSTATS/Download-GDPcurrent-USD-countries.xlsx", skip = 2))
un <- un[un$IndicatorName == "Total Value Added",]
un <- un[,c("CountryID", "Country", "X2019")]
# Merge
gdp <- merge(x = nomenclature, y = un, by.x = "ISONUM", by.y ="CountryID", all.x = TRUE)
# gdp <- gdp[!is.na(gdp$X2019),] %>% st_drop_geometry()
gdp <- gdp %>% st_drop_geometry()
gdp <- gdp[,c("ISO3", "NAMEfr", "NAMEen", "X2019")]
colnames(gdp) <- c("ISO3", "NAMEfr", "NAMEen", "GDP2019")
write.csv(gdp, "gdp2019.csv")
gdp <- merge(x = nomenclature, y = un, by.x = "ISONUM", by.y ="CountryID", all.x = TRUE)
library(readxl)
library(countrycode)
library(geojsonsf)
library(sf)
# Nomenclature
nomenclature <- sf <- geojson_sf("UNSTATS/world.geojson")
# GDP from UNSTATS
un <- data.frame(read_xlsx("UNSTATS/Download-GDPcurrent-USD-countries.xlsx", skip = 2))
un <- un[un$IndicatorName == "Total Value Added",]
un <- un[,c("CountryID", "Country", "X2019")]
# Merge
library(readxl)
library(countrycode)
library(geojsonsf)
library(sf)
# Nomenclature
nomenclature <- sf <- geojson_sf("UNSTATS/world.geojson")
# GDP from UNSTATS
un <- data.frame(read_xlsx("UNSTATS/Download-GDPcurrent-USD-countries.xlsx", skip = 2))
un <- un[un$IndicatorName == "Total Value Added",]
un <- un[,c("CountryID", "Country", "X2019")]
# Merge
gdp <- merge(x = nomenclature, y = un, by.x = "ISONUM", by.y ="CountryID", all.x = TRUE)
# gdp <- gdp[!is.na(gdp$X2019),] %>% st_drop_geometry()
gdp <- gdp %>% st_drop_geometry()
gdp <- gdp[,c("ISO3", "NAMEfr", "NAMEen", "X2019")]
colnames(gdp) <- c("ISO3", "NAMEfr", "NAMEen", "GDP2019")
write.csv(gdp, "gdp2019.csv")
# Nomenclature
getwd()
library(readxl)
library(countrycode)
library(geojsonsf)
library(sf)
# Nomenclature
getwd()
nomenclature <- sf <- geojson_sf("world.geojson")
# GDP from UNSTATS
un <- data.frame(read_xlsx("Download-GDPcurrent-USD-countries.xlsx", skip = 2))
un <- un[un$IndicatorName == "Total Value Added",]
un <- un[,c("CountryID", "Country", "X2019")]
# Merge
gdp <- merge(x = nomenclature, y = un, by.x = "ISONUM", by.y ="CountryID", all.x = TRUE)
# gdp <- gdp[!is.na(gdp$X2019),] %>% st_drop_geometry()
gdp <- gdp %>% st_drop_geometry()
gdp <- gdp[,c("ISO3", "NAMEfr", "NAMEen", "X2019")]
colnames(gdp) <- c("ISO3", "NAMEfr", "NAMEen", "GDP2019")
write.csv(gdp, "gdp2019.csv")

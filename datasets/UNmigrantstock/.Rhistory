# -------------------------------------------
# 1 - NOMENCLATURE & "TAILOR-MADE" BASEMAPS
# -------------------------------------------
getwd()
library("readxl")
library("rnaturalearth")
library("sf")
library("rmapshaper")
library("reshape2")
data_url <- "https://www.un.org/en/development/desa/population/migration/data/estimates2/data/UN_MigrantStockByOriginAndDestination_2019.xlsx"
data_website <- "https://www.un.org/en/development/desa/population/migration/data/estimates2/estimates19.asp"
data_source <- "United Nations, Department of Economic and Social Affairs, Population Division (2019)"
# -------------------------------------------
# 1 - NOMENCLATURE & "TAILOR-MADE" BASEMAPS
# -------------------------------------------
# Packages
library("readxl")
library("rnaturalearth")
library("sf")
library("rmapshaper")
library("reshape2")
# Metadata
data_url <- "https://www.un.org/en/development/desa/population/migration/data/estimates2/data/UN_MigrantStockByOriginAndDestination_2019.xlsx"
data_website <- "https://www.un.org/en/development/desa/population/migration/data/estimates2/estimates19.asp"
data_source <- "United Nations, Department of Economic and Social Affairs, Population Division (2019)"
# Download Data
if(!dir.exists("data")){dir.create("data")}
if(!dir.exists("data/input")){dir.create("data/input")}
file <- "data/input/UN_MigrantStockByOriginAndDestination_2019.xlsx"
download.file(url=data_url, destfile=file)
sheet <- "ANNEX"
nomenclature <- data.frame(read_excel(file, skip = 15, sheet = sheet))
nomenclature <- nomenclature[!is.na(nomenclature$Type.of.data),]
fill <- function(nomenclature, min,max,Code1,Label1,Code2,Label2){
n <- nomenclature
n[n$Index >= min & n$Index <= max,"Code1"] <- Code1
n[n$Index >= min & n$Index <= max,"Label1"] <- Label1
n[n$Index >= min & n$Index <= max,"Code2"] <- Code2
n[n$Index >= min & n$Index <= max,"Label2"] <- Label2
nomenclature <- n
}
nomenclature <- fill(nomenclature, 24,43,947,"Sub-Saharan Africa",910,"Eastern Africa")
nomenclature <- fill(nomenclature, 45,53,947,"Sub-Saharan Africa",911,"Middle Africa")
nomenclature <- fill(nomenclature, 55,59,947,"Sub-Saharan Africa",913,"Southern Africa")
nomenclature <- fill(nomenclature, 61,77,947,"Sub-Saharan Africa",914,"Western Africa")
nomenclature <- fill(nomenclature, 80,86,1833,"Northern Africa and Western Asia",912,"Northern Africa")
nomenclature <- fill(nomenclature, 88,105,1833,"Northern Africa and Western Asia",922,"Western Asia")
nomenclature <- fill(nomenclature, 108,112,921,"Central and Southern Asia",5500,"Central Asia")
nomenclature <- fill(nomenclature, 114,122,921,"Central and Southern Asia",5501,"Southern Asia")
nomenclature <- fill(nomenclature, 125,131,1832,"Eastern and South-Eastern Asia",906,"Eastern Asia")
nomenclature <- fill(nomenclature, 133,143,1832,"Eastern and South-Eastern Asia",920,"South-Eastern Asia")
nomenclature <- fill(nomenclature, 146,171,1830,"Latin America and the Caribbean",915,"Caribbean")
nomenclature <- fill(nomenclature, 173,180,1830,"Latin America and the Caribbean",916,"Central America")
nomenclature <- fill(nomenclature, 182,195,1830,"Latin America and the Caribbean",931,"South America")
nomenclature <- fill(nomenclature, 197,198,909,"Oceania",927,"Australia / New Zealand")
nomenclature <- fill(nomenclature, 201,205,909,"Oceania",928,"Melanesia")
nomenclature <- fill(nomenclature, 207,213,909,"Oceania",954,"Micronesia")
nomenclature <- fill(nomenclature, 215,223,909,"Oceania",957,"Polynesia")
nomenclature <- fill(nomenclature, 227,236,917,"Europe",923,"Eastern Europe")
nomenclature <- fill(nomenclature, 238,250,917,"Europe",924,"Northern Europe")
nomenclature <- fill(nomenclature, 252,267,917,"Europe",925,"Southern Europe")
nomenclature <- fill(nomenclature, 269,277,917,"Europe",926,"Western Europe")
nomenclature <- fill(nomenclature, 279,283,918,"Northern America",918,"Northern America")
world <- ne_countries(scale = 50, returnclass = "sf")
world <- world[,c("un_a3","adm0_a3_is","name_long","geometry")]
world$un_a3 <- as.numeric(world$un_a3)
ctr <- c("France","Netherlands","New Zealand")
tmp <- ne_countries(scale = 50, type = "map_units", country = ctr, returnclass = "sf")
tmp <- tmp[,c("un_a3","adm0_a3_is","name_long","geometry")]
tmp[tmp$name_long=="France","un_a3"] <- 250
tmp[tmp$name_long=="Caribbean Netherlands","un_a3"] <- 535
tmp[tmp$name_long=="Caribbean Netherlands","name_long"] <- "Bonaire, Sint Eustatius and Saba"
world <- world[!world$name_long %in% ctr,]
world <- rbind(world,tmp)
world[world$name_long == "Jersey",1:3] <- c(830, "JEY","Channel Islands")
world[world$name_long == "Guernsey",1:3] <- c(830, "JEY","Channel Islands")
world[world$name_long == "Aland Islands",1:3] <- c(246, "FIN","Finland")
world[world$name_long == "Northern Cyprus",1:3] <- c(196, "CYP","Cyprus")
world[world$name_long == "Kosovo",1:3] <- c(688, "SRB","Serbia")
world[world$name_long == "Somaliland",1:3] <- c(706, "SOM","Somalia")
world[world$name_long == "Taiwan",1:3] <- c(156, "CHN","China")
world <- aggregate(world, by=list(world$un_a3), FUN = head, 1)
world <- world[,-1]
st_geometry(world) <- st_cast(world$geometry, "MULTIPOLYGON")
tiny <- c("tuvalu","gibraltar")
tmp <- ne_countries(scale = 10, type = "map_units", geounit = tiny, returnclass = "sf")
install.packages("rnaturalearthhires", repos = "http://packages.ropensci.org", type = "source")
install.packages("rnaturalearthhires")
# -------------------------------------------
# 1 - NOMENCLATURE & "TAILOR-MADE" BASEMAPS
# -------------------------------------------
# Packages
library("readxl")
library("rnaturalearth")
library("sf")
library("rmapshaper")
library("reshape2")
# Metadata
data_url <- "https://www.un.org/en/development/desa/population/migration/data/estimates2/data/UN_MigrantStockByOriginAndDestination_2019.xlsx"
data_website <- "https://www.un.org/en/development/desa/population/migration/data/estimates2/estimates19.asp"
data_source <- "United Nations, Department of Economic and Social Affairs, Population Division (2019)"
# Download Data
if(!dir.exists("data")){dir.create("data")}
if(!dir.exists("data/input")){dir.create("data/input")}
file <- "data/input/UN_MigrantStockByOriginAndDestination_2019.xlsx"
download.file(url=data_url, destfile=file)
# Nomenclature
sheet <- "ANNEX"
nomenclature <- data.frame(read_excel(file, skip = 15, sheet = sheet))
nomenclature <- nomenclature[!is.na(nomenclature$Type.of.data),]
# Regional & Subregional Aggregates
fill <- function(nomenclature, min,max,Code1,Label1,Code2,Label2){
n <- nomenclature
n[n$Index >= min & n$Index <= max,"Code1"] <- Code1
n[n$Index >= min & n$Index <= max,"Label1"] <- Label1
n[n$Index >= min & n$Index <= max,"Code2"] <- Code2
n[n$Index >= min & n$Index <= max,"Label2"] <- Label2
nomenclature <- n
}
nomenclature <- fill(nomenclature, 24,43,947,"Sub-Saharan Africa",910,"Eastern Africa")
nomenclature <- fill(nomenclature, 45,53,947,"Sub-Saharan Africa",911,"Middle Africa")
nomenclature <- fill(nomenclature, 55,59,947,"Sub-Saharan Africa",913,"Southern Africa")
nomenclature <- fill(nomenclature, 61,77,947,"Sub-Saharan Africa",914,"Western Africa")
nomenclature <- fill(nomenclature, 80,86,1833,"Northern Africa and Western Asia",912,"Northern Africa")
nomenclature <- fill(nomenclature, 88,105,1833,"Northern Africa and Western Asia",922,"Western Asia")
nomenclature <- fill(nomenclature, 108,112,921,"Central and Southern Asia",5500,"Central Asia")
nomenclature <- fill(nomenclature, 114,122,921,"Central and Southern Asia",5501,"Southern Asia")
nomenclature <- fill(nomenclature, 125,131,1832,"Eastern and South-Eastern Asia",906,"Eastern Asia")
nomenclature <- fill(nomenclature, 133,143,1832,"Eastern and South-Eastern Asia",920,"South-Eastern Asia")
nomenclature <- fill(nomenclature, 146,171,1830,"Latin America and the Caribbean",915,"Caribbean")
nomenclature <- fill(nomenclature, 173,180,1830,"Latin America and the Caribbean",916,"Central America")
nomenclature <- fill(nomenclature, 182,195,1830,"Latin America and the Caribbean",931,"South America")
nomenclature <- fill(nomenclature, 197,198,909,"Oceania",927,"Australia / New Zealand")
nomenclature <- fill(nomenclature, 201,205,909,"Oceania",928,"Melanesia")
nomenclature <- fill(nomenclature, 207,213,909,"Oceania",954,"Micronesia")
nomenclature <- fill(nomenclature, 215,223,909,"Oceania",957,"Polynesia")
nomenclature <- fill(nomenclature, 227,236,917,"Europe",923,"Eastern Europe")
nomenclature <- fill(nomenclature, 238,250,917,"Europe",924,"Northern Europe")
nomenclature <- fill(nomenclature, 252,267,917,"Europe",925,"Southern Europe")
nomenclature <- fill(nomenclature, 269,277,917,"Europe",926,"Western Europe")
nomenclature <- fill(nomenclature, 279,283,918,"Northern America",918,"Northern America")
# Geometries
world <- ne_countries(scale = 50, returnclass = "sf")
world <- world[,c("un_a3","adm0_a3_is","name_long","geometry")]
world$un_a3 <- as.numeric(world$un_a3)
# Split up the mainland and the islands (France, Netherlands, New Zaeland)
ctr <- c("France","Netherlands","New Zealand")
tmp <- ne_countries(scale = 50, type = "map_units", country = ctr, returnclass = "sf")
tmp <- tmp[,c("un_a3","adm0_a3_is","name_long","geometry")]
tmp[tmp$name_long=="France","un_a3"] <- 250
tmp[tmp$name_long=="Caribbean Netherlands","un_a3"] <- 535
tmp[tmp$name_long=="Caribbean Netherlands","name_long"] <- "Bonaire, Sint Eustatius and Saba"
world <- world[!world$name_long %in% ctr,]
world <- rbind(world,tmp)
# Merge several entities
world[world$name_long == "Jersey",1:3] <- c(830, "JEY","Channel Islands")
world[world$name_long == "Guernsey",1:3] <- c(830, "JEY","Channel Islands")
world[world$name_long == "Aland Islands",1:3] <- c(246, "FIN","Finland")
world[world$name_long == "Northern Cyprus",1:3] <- c(196, "CYP","Cyprus")
world[world$name_long == "Kosovo",1:3] <- c(688, "SRB","Serbia")
world[world$name_long == "Somaliland",1:3] <- c(706, "SOM","Somalia")
world[world$name_long == "Taiwan",1:3] <- c(156, "CHN","China")
world <- aggregate(world, by=list(world$un_a3), FUN = head, 1)
world <- world[,-1]
st_geometry(world) <- st_cast(world$geometry, "MULTIPOLYGON")
tiny <- c("tuvalu","gibraltar")
tmp <- ne_countries(scale = 10, type = "map_units", geounit = tiny, returnclass = "sf")
install.packages("rnaturalearthhires")
tiny <- c("tuvalu","gibraltar")
tmp <- ne_countries(scale = 10, type = "map_units", geounit = tiny, returnclass = "sf")
tiny <- c("tuvalu","gibraltar")
tmp <- ne_countries(scale = 10, type = "map_units", geounit = tiny, returnclass = "sf")
install.packages("rnaturalearth")
install.packages("rnaturalearthdata")
tmp <- ne_countries(scale = 10, type = "map_units", geounit = tiny, returnclass = "sf")
tiny <- c("tuvalu","gibraltar")
tmp <- ne_countries(scale = 10, type = "map_units", geounit = tiny, returnclass = "sf")
# -------------------------------------------
# 1 - NOMENCLATURE & "TAILOR-MADE" BASEMAPS
# -------------------------------------------
# Packages
library("readxl")
library("rnaturalearth")
library("sf")
library("rmapshaper")
library("reshape2")
data_url <- "https://www.un.org/en/development/desa/population/migration/data/estimates2/data/UN_MigrantStockByOriginAndDestination_2019.xlsx"
data_website <- "https://www.un.org/en/development/desa/population/migration/data/estimates2/estimates19.asp"
data_source <- "United Nations, Department of Economic and Social Affairs, Population Division (2019)"
# Download Data
if(!dir.exists("data")){dir.create("data")}
if(!dir.exists("data/input")){dir.create("data/input")}
file <- "data/input/UN_MigrantStockByOriginAndDestination_2019.xlsx"
download.file(url=data_url, destfile=file)
sheet <- "ANNEX"
nomenclature <- data.frame(read_excel(file, skip = 15, sheet = sheet))
nomenclature <- nomenclature[!is.na(nomenclature$Type.of.data),]
fill <- function(nomenclature, min,max,Code1,Label1,Code2,Label2){
n <- nomenclature
n[n$Index >= min & n$Index <= max,"Code1"] <- Code1
n[n$Index >= min & n$Index <= max,"Label1"] <- Label1
n[n$Index >= min & n$Index <= max,"Code2"] <- Code2
n[n$Index >= min & n$Index <= max,"Label2"] <- Label2
nomenclature <- n
}
nomenclature <- fill(nomenclature, 24,43,947,"Sub-Saharan Africa",910,"Eastern Africa")
nomenclature <- fill(nomenclature, 45,53,947,"Sub-Saharan Africa",911,"Middle Africa")
nomenclature <- fill(nomenclature, 55,59,947,"Sub-Saharan Africa",913,"Southern Africa")
nomenclature <- fill(nomenclature, 61,77,947,"Sub-Saharan Africa",914,"Western Africa")
nomenclature <- fill(nomenclature, 80,86,1833,"Northern Africa and Western Asia",912,"Northern Africa")
nomenclature <- fill(nomenclature, 88,105,1833,"Northern Africa and Western Asia",922,"Western Asia")
nomenclature <- fill(nomenclature, 108,112,921,"Central and Southern Asia",5500,"Central Asia")
nomenclature <- fill(nomenclature, 114,122,921,"Central and Southern Asia",5501,"Southern Asia")
nomenclature <- fill(nomenclature, 125,131,1832,"Eastern and South-Eastern Asia",906,"Eastern Asia")
nomenclature <- fill(nomenclature, 133,143,1832,"Eastern and South-Eastern Asia",920,"South-Eastern Asia")
nomenclature <- fill(nomenclature, 146,171,1830,"Latin America and the Caribbean",915,"Caribbean")
nomenclature <- fill(nomenclature, 173,180,1830,"Latin America and the Caribbean",916,"Central America")
nomenclature <- fill(nomenclature, 182,195,1830,"Latin America and the Caribbean",931,"South America")
nomenclature <- fill(nomenclature, 197,198,909,"Oceania",927,"Australia / New Zealand")
nomenclature <- fill(nomenclature, 201,205,909,"Oceania",928,"Melanesia")
nomenclature <- fill(nomenclature, 207,213,909,"Oceania",954,"Micronesia")
nomenclature <- fill(nomenclature, 215,223,909,"Oceania",957,"Polynesia")
nomenclature <- fill(nomenclature, 227,236,917,"Europe",923,"Eastern Europe")
nomenclature <- fill(nomenclature, 238,250,917,"Europe",924,"Northern Europe")
nomenclature <- fill(nomenclature, 252,267,917,"Europe",925,"Southern Europe")
nomenclature <- fill(nomenclature, 269,277,917,"Europe",926,"Western Europe")
nomenclature <- fill(nomenclature, 279,283,918,"Northern America",918,"Northern America")
world <- ne_countries(scale = 50, returnclass = "sf")
world <- world[,c("un_a3","adm0_a3_is","name_long","geometry")]
world$un_a3 <- as.numeric(world$un_a3)
ctr <- c("France","Netherlands","New Zealand")
tmp <- ne_countries(scale = 50, type = "map_units", country = ctr, returnclass = "sf")
tmp <- tmp[,c("un_a3","adm0_a3_is","name_long","geometry")]
tmp[tmp$name_long=="France","un_a3"] <- 250
tmp[tmp$name_long=="Caribbean Netherlands","un_a3"] <- 535
tmp[tmp$name_long=="Caribbean Netherlands","name_long"] <- "Bonaire, Sint Eustatius and Saba"
world <- world[!world$name_long %in% ctr,]
world <- rbind(world,tmp)
world[world$name_long == "Jersey",1:3] <- c(830, "JEY","Channel Islands")
world[world$name_long == "Guernsey",1:3] <- c(830, "JEY","Channel Islands")
world[world$name_long == "Aland Islands",1:3] <- c(246, "FIN","Finland")
world[world$name_long == "Northern Cyprus",1:3] <- c(196, "CYP","Cyprus")
world[world$name_long == "Kosovo",1:3] <- c(688, "SRB","Serbia")
world[world$name_long == "Somaliland",1:3] <- c(706, "SOM","Somalia")
world[world$name_long == "Taiwan",1:3] <- c(156, "CHN","China")
world <- aggregate(world, by=list(world$un_a3), FUN = head, 1)
world <- world[,-1]
st_geometry(world) <- st_cast(world$geometry, "MULTIPOLYGON")
View(world)
plot(st_geometry(world))
tiny <- c("tuvalu","gibraltar")
tmp <- ne_countries(scale = 10, type = "map_units", geounit = tiny, returnclass = "sf")
install.packages("rnaturalearthhires", repos = "http://packages.ropensci.org", type = "source")
countries
countries110
test <- countries110
View(test)
world <- ne_countries(scale = 50, returnclass = "sf")
world <- world[,c("un_a3","adm0_a3_is","name_long","geometry")]
world$un_a3 <- as.numeric(world$un_a3)
tiny <- c("tuvalu","gibraltar")
tmp <- ne_countries(scale = 10, type = "map_units", geounit = tiny, returnclass = "sf")
ne_download(scale = 10, type = "map_units", returnclass = "sf")
tmp <- ne_download(scale = 10, type = "map_units", returnclass = "sf", geounit = tiny)
tmp <- ne_download(scale = 10, type = "map_units", returnclass = "sf")
migr <- read.csv("data/fij/migr2019_T.csv")
library("sf")
migr <- read.csv("data/fij/migr2019_T.csv")
countries <- st_read("data/geom/countries.gpkg")
subregions <- st_read("data/geom/subregions.gpkg")
keys <- data.frame(countries[,c("adm0_a3_is","Code2")])
keys$geom <- NULL
migr <- merge(x = migr, y = keys, by.x = "i", by.y = "adm0_a3_is")
colnames(migr)[4] <- "subreg_i"
migr <- merge(x = migr, y = keys, by.x = "j", by.y = "adm0_a3_is")
colnames(migr)[5] <- "subreg_j"
migr$id <- paste0(migr$subreg_i,"_",migr$subreg_j)
flows <- aggregate(migr$fij, by=list(migr$id), FUN = sum)
flows$i <- sapply(strsplit(flows$Group.1, "_"), "[", 1)
flows$j <- sapply(strsplit(flows$Group.1, "_"), "[", 2)
flows <- flows[,c("i","j","x")]
colnames(flows)[3] <- "fij"
flows$fij <- round(flows$fij/1000,0)
View(flows)
flowsintra <- flows[flows$i == flows$j,c("i","fij")]
subregions <- merge(x = subregions, y = flowsintra, by.x = "id", by.y = "i")
View(subregions)
# Packages
library("sf")
# Import data
migr <- read.csv("data/fij/migr2019_T.csv")
subregions <- st_read("data/geom/subregions.gpkg")
keys <- data.frame(countries[,c("adm0_a3_is","Code2")])
keys$geom <- NULL
migr <- merge(x = migr, y = keys, by.x = "i", by.y = "adm0_a3_is")
colnames(migr)[4] <- "subreg_i"
migr <- merge(x = migr, y = keys, by.x = "j", by.y = "adm0_a3_is")
colnames(migr)[5] <- "subreg_j"
migr$id <- paste0(migr$subreg_i,"_",migr$subreg_j)
flows <- aggregate(migr$fij, by=list(migr$id), FUN = sum)
flows$i <- sapply(strsplit(flows$Group.1, "_"), "[", 1)
flows$j <- sapply(strsplit(flows$Group.1, "_"), "[", 2)
flows <- flows[,c("i","j","x")]
colnames(flows)[3] <- "fij"
flows$fij <- round(flows$fij/1000,0)
keys <- data.frame(countries[,c("adm0_a3_is","Code2")])
# Packages
library("sf")
# Import data
migr <- read.csv("data/fij/migr2019_T.csv")
countries <- st_read("data/geom/countries.gpkg")
subregions <- st_read("data/geom/subregions.gpkg")
keys <- data.frame(countries[,c("adm0_a3_is","Code2")])
keys$geom <- NULL
migr <- merge(x = migr, y = keys, by.x = "i", by.y = "adm0_a3_is")
colnames(migr)[4] <- "subreg_i"
migr <- merge(x = migr, y = keys, by.x = "j", by.y = "adm0_a3_is")
colnames(migr)[5] <- "subreg_j"
migr$id <- paste0(migr$subreg_i,"_",migr$subreg_j)
flows <- aggregate(migr$fij, by=list(migr$id), FUN = sum)
flows$i <- sapply(strsplit(flows$Group.1, "_"), "[", 1)
flows$j <- sapply(strsplit(flows$Group.1, "_"), "[", 2)
flows <- flows[,c("i","j","x")]
colnames(flows)[3] <- "fij"
flows$fij <- round(flows$fij/1000,0)
# Packages
library("sf")
# Import data
migr <- read.csv("data/fij/migr2019_T.csv")
countries <- st_read("data/geom/countries.gpkg")
subregions <- st_read("data/geom/subregions.gpkg")
# Aggregation by subregions
keys <- data.frame(countries[,c("adm0_a3_is","Code2")])
keys$geom <- NULL
migr <- merge(x = migr, y = keys, by.x = "i", by.y = "adm0_a3_is")
colnames(migr)[4] <- "subreg_i"
migr <- merge(x = migr, y = keys, by.x = "j", by.y = "adm0_a3_is")
colnames(migr)[5] <- "subreg_j"
migr$id <- paste0(migr$subreg_i,"_",migr$subreg_j)
flows <- aggregate(migr$fij, by=list(migr$id), FUN = sum)
flows$i <- sapply(strsplit(flows$Group.1, "_"), "[", 1)
flows$j <- sapply(strsplit(flows$Group.1, "_"), "[", 2)
flows <- flows[,c("i","j","x")]
colnames(flows)[3] <- "fij"
flows$fij <- round(flows$fij/1000,0)
# stock_intra
stock_intra <- flows[flows$i == flows$j,c("i","fij")]
colnames(stock_intra) <- c("id","intra")
flows <-  flows[flows$i != flows$j,]
# Stock_i
stock_i <- aggregate(flows$fij, by=list(flows$i), FUN = sum)
colnames(stock_i) <- c("id","from")
# Stock_j
stock_j <- aggregate(flows$fij, by=list(flows$j), FUN = sum)
colnames(stock_j) <- c("id","to")
# Merge
subregions <- merge(x = subregions, y = stock_intra, by = "id")
subregions <- merge(x = subregions, y = stock_i, by = "id")
subregions <- merge(x = subregions, y = stock_j, by = "id")
View(subregions)
plot(st_geometry(subregions))
if(!dir.exists("data/regional")){dir.create("data/regional")}
library(geojsonsf)
st_write(subregions, dsn = "x.geojson", delete_dsn = TRUE)
# Packages
library(sf)
library(geojsonsf)
# Import data
migr <- read.csv("data/fij/migr2019_T.csv")
countries <- st_read("data/geom/countries.gpkg")
subregions <- st_read("data/geom/subregions.gpkg")
# Aggregation by subregions
keys <- data.frame(countries[,c("adm0_a3_is","Code2")])
keys$geom <- NULL
migr <- merge(x = migr, y = keys, by.x = "i", by.y = "adm0_a3_is")
colnames(migr)[4] <- "subreg_i"
migr <- merge(x = migr, y = keys, by.x = "j", by.y = "adm0_a3_is")
colnames(migr)[5] <- "subreg_j"
migr$id <- paste0(migr$subreg_i,"_",migr$subreg_j)
flows <- aggregate(migr$fij, by=list(migr$id), FUN = sum)
flows$i <- sapply(strsplit(flows$Group.1, "_"), "[", 1)
flows$j <- sapply(strsplit(flows$Group.1, "_"), "[", 2)
flows <- flows[,c("i","j","x")]
colnames(flows)[3] <- "fij"
flows$fij <- round(flows$fij/1000,0)
# stock_intra
stock_intra <- flows[flows$i == flows$j,c("i","fij")]
colnames(stock_intra) <- c("id","intra")
flows <-  flows[flows$i != flows$j,]
# Stock_i
stock_i <- aggregate(flows$fij, by=list(flows$i), FUN = sum)
colnames(stock_i) <- c("id","from")
# Stock_j
stock_j <- aggregate(flows$fij, by=list(flows$j), FUN = sum)
colnames(stock_j) <- c("id","to")
# Merge
subregions <- merge(x = subregions, y = stock_intra, by = "id")
subregions <- merge(x = subregions, y = stock_i, by = "id")
subregions <- merge(x = subregions, y = stock_j, by = "id")
# Export
if(!dir.exists("data/subregions")){dir.create("data/subregions")}
st_write(subregions, dsn = "data/subregions/subregions.geojson")
st_write(subregions, dsn = "data/subregions/subregions.geojson")
# Packages
library(sf)
library(geojsonsf)
# Import data
migr <- read.csv("data/fij/migr2019_T.csv")
countries <- st_read("data/geom/countries.gpkg")
subregions <- st_read("data/geom/subregions.gpkg")
# Aggregation by subregions
keys <- data.frame(countries[,c("adm0_a3_is","Code2")])
keys$geom <- NULL
migr <- merge(x = migr, y = keys, by.x = "i", by.y = "adm0_a3_is")
colnames(migr)[4] <- "subreg_i"
migr <- merge(x = migr, y = keys, by.x = "j", by.y = "adm0_a3_is")
colnames(migr)[5] <- "subreg_j"
migr$id <- paste0(migr$subreg_i,"_",migr$subreg_j)
flows <- aggregate(migr$fij, by=list(migr$id), FUN = sum)
flows$i <- sapply(strsplit(flows$Group.1, "_"), "[", 1)
flows$j <- sapply(strsplit(flows$Group.1, "_"), "[", 2)
flows <- flows[,c("i","j","x")]
colnames(flows)[3] <- "fij"
flows$fij <- round(flows$fij/1000,0)
# stock_intra
stock_intra <- flows[flows$i == flows$j,c("i","fij")]
colnames(stock_intra) <- c("id","intra")
flows <-  flows[flows$i != flows$j,]
# Stock_i
stock_i <- aggregate(flows$fij, by=list(flows$i), FUN = sum)
colnames(stock_i) <- c("id","from")
# Stock_j
stock_j <- aggregate(flows$fij, by=list(flows$j), FUN = sum)
colnames(stock_j) <- c("id","to")
# Merge
subregions <- merge(x = subregions, y = stock_intra, by = "id")
subregions <- merge(x = subregions, y = stock_i, by = "id")
subregions <- merge(x = subregions, y = stock_j, by = "id")
# Export
if(!dir.exists("data/regional")){dir.create("data/regional")}
st_write(subregions, dsn = "data/regional/subregions.geojson")
